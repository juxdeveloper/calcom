# DOCUMENTACIÓN ORIGINAL
SIN FORMATO

# =========================================
cli.py
import cli
# =========================================
# UTILIDAD ESTÁNDAR PARA INGRESO Y MANEJO
# DE DATOS EN LA TERMINAL

# FUNCIONES NOTABLES
# tipo(z)				: Obtiene el tipo de expresión 
#	retorna				[0=error, 1=bin, 2=pol, 3=exp]

# imprimir_tipo(z,n=0)	: Imprime el tipo de expresión y su número
#	retorna				[void]

# ingresar(z,tipo)		: Obtiene la expresión en var. operables
#	retorna				[a,b = bin]
#						[r,g = pol]
#						[r,t = exp]

# cl(color)				: Formatea la terminal en distintos colores
#	retorna				[void]
#							'r'=red
#							'g'=green
#							'b'=blue
#							'y'=yellow
#							 0=reset
# =========================================


 
=========================================
conv.py
import conv
=========================================
# CONVERTIDOR ESTÁNDAR DE NÚMEROS COMPLEJOS
# EN TODAS SUS FORMAS

#bin_pol    <-->    pol_bin
#pol_exp    <-->    exp_pol

# VARIABLES CONSTANTES
# a y b     : términos binómicos
# g         : ángulo en grados
# t         : ángulo en radianes

# NOMBRE DE FUNCIONES
# sou_obj --> source_objetive

# 3 letras de abreviatura de fuente + _ + abreviatura objetivo
# ABREVIATURAS
# 1. bin 	(binómica)
# 2. pol 	(polar)
# 3. exp 	(exponencial)
# =========================================








operations.py
import operations
# =========================================
# CALCULADORA ESTÁNDAR PARA TODAS LAS
# OPERACIONES

# PARÁMETROS
# z1			: 1er número complejo
# z1			: 2do número complejo
# operacion		: Primer número complejo
# FUNCIONES NOTABLES
#adicion(z1,z2,operacion=0)		:	suma-resta
#	return a,b 			(forma bin)
#factor(z1,z2,operacion=0)		:	multiplicacion-division
#	return r,g			(forma pol)
#potencia(z1,z2,operacion=0)		:	potencia-raiz
#	return r,g 			(forma pol)
# =========================================
